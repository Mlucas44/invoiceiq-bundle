services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  # Enregistre tout le namespace du bundle
  Mlucas\InvoiceIQBundle\:
    resource: '../../*'
    exclude:
      - '../../DependencyInjection/'
      - '../../Resources/'
      - '../../Tests/'
      - '../../Domain/'   # évite d’autowirer les DTO/modèles
      - '../../Model/' 
    # Liaisons de paramètres → arguments nommés dans tes services
    bind:
      $ocrProvider: '%invoice_iq.ocr.provider%'
      $checkTotals: '%invoice_iq.checks.totals%'
      $checkDuplicates: '%invoice_iq.checks.duplicates%'
      $checkVatFormat: '%invoice_iq.checks.vat_format%'

  # --- OCR providers (v0.1: stub Tesseract) -------------------------------

  # Service concret (stub)
  Mlucas\InvoiceIQBundle\Ocr\Stub\TesseractOcrClient: ~

  # Alias "provider" pour pouvoir sélectionner via la config (ocr.provider)
  invoiceiq.ocr.tesseract:
    alias: Mlucas\InvoiceIQBundle\Ocr\Stub\TesseractOcrClient
    public: false

  # --- Validation pipeline ----------------------------------------------------

  # Règle TotalsCheck (active/désactive + tolérance par param)
  Mlucas\InvoiceIQBundle\Validation\Checks\TotalsCheck:
    arguments:
      $enabled: '%invoice_iq.checks.totals%'
      $tolerance: '%invoice_iq.checks.totals_tolerance%'

  # Chaîne qui exécute les checks (liste explicite v0.1)
  Mlucas\InvoiceIQBundle\Validation\CheckerChain:
    arguments:
      $checks:
        - '@Mlucas\InvoiceIQBundle\Validation\Checks\TotalsCheck'

  # Alias public (facile à récupérer)
  invoiceiq.validation.chain:
    alias: Mlucas\InvoiceIQBundle\Validation\CheckerChain
    public: true
